
const mongoose = require('mongoose');
const connect = require('../config/database');
const Permission = require('../models/Permission');
const Role = require('../models/Role');

(async () => {
  await connect();

  // üõ°Ô∏è Todas as permiss√µes do sistema
  const permissionsMap = {
    // Usu√°rios
    CREATE_USER: 'Criar novo usu√°rio',
    VIEW_USER: 'Visualizar usu√°rio',
    UPDATE_USER: 'Atualizar dados de usu√°rio',
    DELETE_USER: 'Excluir usu√°rio',
    MANAGE_USERS: 'Gerenciar usu√°rios',

    // Comunidades
    CREATE_COMMUNITY: 'Criar comunidade',
    VIEW_COMMUNITY: 'Visualizar comunidade',
    UPDATE_COMMUNITY: 'Atualizar comunidade',
    DELETE_COMMUNITY: 'Excluir comunidade',
    MANAGE_COMMUNITIES: 'Gerenciar comunidades',
    INVITE_MEMBER: 'Convidar membro para comunidade',
    HIRE_TRADER: 'Contratar trader',
    REMOVE_TRADER: 'Remover trader',
    ADMIN_INVITE_MEMBER: 'Convidar membro para comunidade',
    ADMIN_HIRE_TRADER: 'Contratar trader',
    ADMIN_REMOVE_TRADER: 'Remover trader',
    // Criptomoedas

    // Opera√ß√µes
    CREATE_OPERATION: 'Criar opera√ß√£o',
    VIEW_OPERATION: 'Visualizar opera√ß√£o',
    UPDATE_OPERATION: 'Atualizar opera√ß√£o',
    DELETE_OPERATION: 'Excluir opera√ß√£o',
    MANAGE_OPERATIONS: 'Gerenciar opera√ß√µes',
    CLOSE_OPERATION_MANUALLY: 'Fechar opera√ß√£o manualmente',

    // Notifica√ß√µes
    SEND_ALERT: 'Enviar alerta',
    MANAGE_CHANNELS: 'Gerenciar canais de notifica√ß√£o',
    CREATE_COMMUNICATION: 'Criar notifica√ß√£o',
    UPDATE_COMMUNICATION: 'Atualizar notifica√ß√£o',
    DELETE_COMMUNICATION: 'Excluir notifica√ß√£o',
    MANAGE_COMMUNICATIONS: 'Gerenciar notifica√ß√µes',
    VIEW_COMMUNICATIONS: 'Visualizar hist√≥rico de notifica√ß√µes',

    // Permiss√µes e Sistema
    VIEW_PERMISSION: 'Visualizar permiss√µes',
    EDIT_PERMISSION: 'Editar permiss√µes',
    DELETE_PERMISSION: 'Excluir permiss√µes',
    MANAGE_PERMISSIONS: 'Gerenciar permiss√µes',
    ACCESS_ADMIN_PANEL: 'Acessar painel administrativo',
    VIEW_SYSTEM_LOGS: 'Visualizar logs do sistema',
    MANAGE_SETTINGS: 'Gerenciar configura√ß√µes',
    RESET_PASSWORDS: 'Resetar senhas de usu√°rios',
    
    MANAGE_SUBSCRIPTIONS: 'Gerenciar assinaturas',
    MANAGE_PLANS: 'Gerenciar planos',
    MANAGE_PERMISSIONS: 'Gerenciar permiss√µes'   
  };

  const permissionDocs = {};

  // Criar todas as permiss√µes
  for (const [name, description] of Object.entries(permissionsMap)) {
    const permission = await Permission.findOneAndUpdate(
      { name },
      { $setOnInsert: { description } },
      { new: true, upsert: true }
    );
    permissionDocs[name] = permission;
  }

  // Defini√ß√£o de roles e suas permiss√µes
  const rolesMap = {
    ADMIN: Object.keys(permissionsMap),
    TRADER: [
      'CREATE_OPERATION', 'UPDATE_OPERATION', 'DELETE_OPERATION', 'VIEW_COMMUNITY','VIEW_OPERATION', 'CLOSE_OPERATION_MANUALLY','ADMIN_INVITE_MEMBER','ADMIN_HIRE_TRADER','ADMIN_REMOVE_TRADER'
    ],
    COMMUNITY: [
      'CREATE_COMMUNITY', 'UPDATE_COMMUNITY', 'HIRE_TRADER', 'REMOVE_TRADER', 'VIEW_OPERATION', 'INVITE_MEMBER','DELETE_COMMUNITY','CREATE_COMMUNICATION','UPDATE_COMMUNICATION','DELETE_COMMUNICATION','VIEW_COMMUNICATIONS','MANAGE_SUBSCRIPTIONS'
    ],
    MODERATOR: [
      'VIEW_USER', 'VIEW_OPERATION', 'SEND_ALERT'
    ],
    USER: [
      'VIEW_COMMUNITY'
    ],
    GUEST: [
      'VIEW_COMMUNITY'
    ]
  };

  // Criar roles e associar permiss√µes
  for (const [roleName, permNames] of Object.entries(rolesMap)) {
    const permissions = permNames.map(name => permissionDocs[name]._id);

    await Role.findOneAndUpdate(
      { name: roleName },
      {
        name: roleName,
        permissions,
        description: `${roleName} role`
      },
      { upsert: true }
    );
  }

  console.log('Roles e permiss√µes criadas com sucesso!');
  process.exit();
})();
